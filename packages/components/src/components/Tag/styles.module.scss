@use "../../styles/variables";
@use "../../styles/utils";

@mixin modifier($variant, $scheme) {
  .Block--#{$variant}.Block--#{$scheme} {
    background-color: var(--cmm-color-#{$scheme}-#{$variant}-bg);
    color: var(--cmm-color-#{$scheme}-#{$variant}-font);
    border-color: var(--cmm-color-#{$scheme}-#{$variant}-border);
  }
}

@include utils.layer {
  %sizeDefaults {
    --Tag-height: 2rem;
    --Tag-font-size: var(--cmm-font-size-sm);
    --Tag-pad-x: 0.75rem;
    --decor-offset: 0.5rem;
  }

  .Block {
    @extend %sizeDefaults;

    font-size: var(--Tag-font-size);
    height: var(--Tag-height);
    padding: 0 var(--Tag-pad-x);

    white-space: nowrap;
    border-radius: var(--cmm-rounded-full);
    column-gap: 0.5rem;
    font-weight: var(--cmm-font-weight-medium);
    display: inline-flex;
    align-items: center;

    svg {
      width: var(--Tag-icon-size, 1em);
      height: var(--Tag-icon-size, 1em);
      margin: var(--Tag-icon-margin, 0);
    }
  }

  // Modifiers
  @each $variant in variables.$variants {
    @each $scheme in variables.$colorSchemes {
      @include modifier($variant, $scheme);
    }
  }

  .Block--outline {
    border-width: 1px;
    border-style: solid;
  }

  // Sizes

  .--sm {
    --Tag-height: 1.5rem;
    --Tag-font-size: var(--cmm-font-size-xs);
    --Tag-pad-x: 0.5rem;
    --decor-offset: 0;
  }

  .--md {
    @extend %sizeDefaults;
  }

  .--lg {
    --Tag-height: 2.5rem;
    --Tag-font-size: var(--cmm-font-size-md);
    --Tag-pad-x: 1rem;
    --decor-offset: 0.25rem;
  }
}
