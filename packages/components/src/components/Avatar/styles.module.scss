@use "../../styles/variables.scss";
@use "../../styles/utils";

@mixin modifier($variant, $scheme) {
  .Block--#{$variant}.Block--#{$scheme} {
    background-color: var(--cmm-color-#{$scheme}-#{$variant}-bg);
    color: var(--cmm-color-#{$scheme}-#{$variant}-font);
    border-color: var(--cmm-color-#{$scheme}-#{$variant}-border);
  }
}

@include utils.layer {
  .Block {
    @extend %sizeDefaults;

    height: var(--Avatar-size, var(--size));
    width: var(--Avatar-size, var(--size));
    margin: var(--Avatar-margin, 0);
    font-size: var(--font-size);
    background-color: var(--bg-color);
    color: var(--font-color);

    display: block;
    border-radius: var(--cmm-rounded-full);
    overflow: hidden;

    * {
      width: 100%;
      height: 100%;
      display: grid;
      place-content: center;
    }

    img {
      object-fit: cover;
      object-position: center;
    }

    svg {
      width: 1.8em;
      height: 1.8em;
    }
  }

  // Modifiers
  @each $variant in variables.$variants {
    @each $scheme in variables.$colorSchemes {
      @include modifier($variant, $scheme);
    }
  }

  .Block--outline {
    border-width: 1px;
    border-style: solid;
  }

  // Sizes

  %sizeDefaults {
    --size: 3rem;
    --font-size: var(--cmm-font-size-lg);
  }

  .--sm {
    --size: 2rem;
    --font-size: var(--cmm-font-size-sm);
  }

  .--md {
    @extend %sizeDefaults;
  }

  .--lg {
    --size: 4rem;
    --font-size: var(--cmm-font-size-2xl);
  }
}
